<?php/** * People Just Walking Dead. *  * @author  ZeroBoy  * @version 1.0 * @model 首页 */namespace Home\Controller;use Think\Controller;class IndexController extends BaseController {	private $ArticleCateModel;	public $ArticleModel;	private $AriticleTagModel;	private $ArticleCommentModel;	public function __construct(){				parent::__construct();		$this->ArticleCateModel = M('articlecate');		$this->ArticleModel = M('article');		$this->AriticleTagModel = M("articletag");		$this->ArticleCommentModel = M('communicate');	}    public function index(){	   //文章	   $where = array(				"cate"=>I('get.cate'),				"tag"=>I('get.tag'),				"date"=>I('get.date'),		   );	   $data2 = $this->ArticleList(1,$where);//header("content-type:text/html;charset=utf-8;");//var_dump($data2);//die;		//$this->assign("article",$data2);			$res = $this->createtpllist($data2);		$this->assign("articlelist",$res);		$this->display();    }				private function createtpllist($data){				$articletpl_obj = M('article_tpl');		$articletpl_data = $articletpl_obj->select();			foreach($data as $k=>$value){			//模板	$articletpl_content = $articletpl_data[$value['article_tpl_type']-1]['articletpl_content'];			switch($value['article_tpl_type']){		case 1:		/**/			$article_type = ($value['article_type'] == 1)?"<span class='label label-success' style='padding:2px 5px;margin-right:10px;margin-top:-2px;'>原</span>":"<span class='label label-default' style='padding:2px 5px;margin-right:10px;margin-top:-2px;'>转</span>";						$article_id = $value['article_id'];						$article_title = $value['article_title'];						$article_link = '<a href="'.U('Article/index','',false).'/id/'.$article_id.'">'.$article_title.'</a>';						$article_create_time = $value['article_create_time'];						$article_face = ($value['article_face_path'])?'<div class="col-sm-4"><div class="thumbnail"style="height:auto;"><img src="'.C('UPLOAD_PATH').$value['article_face_path'].'" style=""></div></div><div class="col-sm-8"><p class="text-justify">'.mb_substr($value['article_content_short'], 0, 400, 'utf-8').'</p></div>':'<div class="col-sm-12"><p class="text-justify">'.mb_substr($value['article_content_short'], 0, 400, 'utf-8').'</p></div>';						$article_tags = '';			foreach($value['article_tags_c'] as $k=>$v){								$article_tags .= '<a href="'.U('Index/index/Tag','',false).'/'.$v.'"><span class="label label-info" style="border:1px solid #ccc;">'.$v.'</span></a>';			}						$article_look_acount = $value['article_look_acount'];			$article_comment_count = $value['article_comment_count'];										$needdata = array(				$article_type,				$article_link,				$article_create_time,				$article_face,				$article_tags,				$article_look_acount,				$article_comment_count			);						$str1 = vsprintf($articletpl_content,$needdata);						$string2 .= $str1;											break;		case 2:			//参数			$article_face1 = '<div class="col-sm-12"><p class="text-justify" style="color:rgb(31,130,193);font-family: Microsoft YaHei;font-size:14px;"><strong>'.$value['article_content_short'].'</strong></p></div>';						//$article_face1 = '123123123';						//参数组			if($k%2 == 0){				$needdata = array(					'-webkit-gradient(linear, left top, left bottom, from(lightblue), color-stop(0.5, #f1f1f1), to(rgb(255, 255, 255)))',//theme					$article_face1									);			}else{				$needdata = array(					'-webkit-gradient(linear, left top, left bottom, from(lightgreen), color-stop(0.5, #f1f1f1), to(rgb(255, 255, 255)))',//theme					$article_face1									);			}												//模板变量替换			$str2 = vsprintf($articletpl_content,$needdata);						//叠加模板链			$string2 .= $str2;					break;		}		}						return $string2 ;			}	//文章	public function ArticleList($Page=1,$where=''){				if(IS_AJAX){			$Page = I("post.curr",1);			$where = array(				"cate"=>I('post.cate'),				"tag"=>I('post.tag'),				"date"=>I('post.date'),			);			$data = $this->GetArticleList($Page,$where);			$res = array(				"status"=>1,				"content"=>$this->createtpllist($data),			);			$this->ajaxReturn($res);		}else{			$data = $this->GetArticleList($Page,$where);			return $data;			}	}	//文章列表	public function GetArticleList($Page=1,$where=''){				$where = $this->FormatWhereCondition($where);		$PageInfo = ($Page>0)?GetQueryPage($Page):"";		$res = $this->ArticleModel->where($where)->limit($PageInfo['limit'])->order("article_id desc")->select();				$res = $this->FormatArticleList($res);		return $res;	}	//格式化	private function FormatArticleList($data){		$ariticletag = $this->AriticleTagModel->select();		foreach($ariticletag as $k=>$v){			$tagarr[$v['tag_id']] = $v['tag_name'];		}		$articlecatelist = $this->ArticleCateModel->select();		foreach($articlecatelist as $v){			$catearr[$v['articlecate_id']] = $v['articlecate_name'];		}				foreach($data as $k=>$v){			$data[$k]['article_create_time'] = date("发布于 Y-m-d ",$v['article_create_time']);			$data[$k]['article_cate_id'] = $catearr[$v['article_cate_id']];			$data[$k]['article_author_names'] = $userarr[$v['article_author_id']];  			$data[$k]['article_content_short'] = $this->formarcontent(strip_tags(htmlspecialchars_decode($v['article_content'])));			$data[$k]['article_title_format'] = (mb_strlen($v['article_title'],'UTF8')>10)?mb_substr($v['article_title'], 0, 10, 'utf-8').'...':$v['article_title'];						//标签格式化			$tagsting = "";			$tagarrs = explode("|",$v['article_tag']);			for($i=0;$i<count($tagarrs);$i++){				if($i == 0){					$tagsting = str_replace($tagarrs[$i],$tagarr[$tagarrs[$i]],$v['article_tag']);				}else{					$tagsting = str_replace($tagarrs[$i],$tagarr[$tagarrs[$i]],$tagsting);				}			}			$data[$k]['article_tags_c'] = explode("|",$tagsting);			//评论数			$commentcount = $this->ArticleCommentModel->where(" mate_thread_key = '".C("ARTICLE_THREAD_KEY").$v['article_id']."' ")->count();			$data[$k]['article_comment_count'] = $commentcount;		}		return $data;	}	//文本去符号	private function formarcontent($string){			$qian=array(" ","  ","\t","\n","\r");//特殊符				static $strings;		for($i=0;$i<count($qian);$i++){					$strings = str_replace($qian[$i],"",$string);		}		$strings = str_replace("&nbsp;"," ",$strings);//替换实体符		return $strings;	}	private function articlestringcreate($data){		static $str ;	foreach($data as $k=>$v){				$str.='<div class="panel panel-default" id="articlerow">';				$str.='<div class="panel-heading">';				$str.='<h3 class="blog-post-title"><a href="'.U('Article/index','',false).'/id/'.$v['article_id'].'">'.$v['article_title'].'</a></h3>';				$str.='<p class="blog-post-meta">'.$v['article_create_time'].'</p>';				$str.='</div>';				$str.='<div class="panel-body">';				$str.='<div class="row">';				if(!empty($v['article_face_path'])){					$str.='<div class="col-sm-4">';					$str.='<div class="thumbnail" style="height:auto;">';					$str.='<img src="'.C('UPLOAD_PATH').$v['article_face_path'].'" style="">';					$str.='</div>';					$str.='</div>';					$str.='<div class="col-sm-8">';					$str.='<p class="text-justify">'.mb_substr($v['article_content_short'], 0, 200, 'utf-8').'...</p>';					$str.='</div>';				}else{					$str.='<div class="col-sm-12">';					$str.='<p class="text-justify">'.mb_substr($v['article_content_short'], 0, 300, 'utf-8').'...</p>';					$str.='</div>';				}				$str.='</div>';				$str.='</div>';				$str.='		   <ul class="list-group" style="text-align:right;">';				$str.='				<li class="list-group-item">';				$str.='					<div id="tags"  style="float:left;">';				foreach($v['article_tags_c'] as $k2=>$v2){									$str.='	<a href="'.U('Index/index/Tag','',false).'/'.$v2.'"><span class="label label-info" style="border:1px solid #ccc;">'.$v2.'</span></a>';				}				$str.='</div>';				$str.='<a href="#">阅读 <span class="badge">'.$v['article_look_acount'].'</span></a>';				$str.='&nbsp;&nbsp;';				$str.='<a href="#">评论 <span class="badge">0</span></a>';				$str.='</li>';				$str.='</ul>';				$str.='</div>';	}	return $str;	}	//条件处理	private function FormatWhereCondition($data){		$where = '';			$keys = array_keys($data);		for($i=0;$i<count($data);$i++){				switch($keys[$i]){					case 'cate':							$articlecatelist = $this->ArticleCateModel->select();						foreach($articlecatelist as $v){							$catearr[$v['articlecate_name']] = $v['articlecate_id'];						}						$where .= ($data[$keys[$i]])?" article_cate_id = ".$catearr[$data[$keys[$i]]]:''; 						break;					case 'tag':						if($data[$keys[$i]]){								$condition = "tag_name = '".$data[$keys[$i]]."'";								$field = "tag_id";								$articletag = $this->AriticleTagModel->field($field)->where($condition)->select();								//								$where .= ($articletag[0]['tag_id'])?'article_tag like "%'.$articletag[0]['tag_id'].'|%" or article_tag like "%|'.$articletag[0]['tag_id'].'%" or article_tag = "'.$articletag[0]['tag_id'].'" ':'';							}						break;					case 'date':					    $where .= ($data[$keys[$i]])?"FROM_UNIXTIME(article_create_time, '%Y-%m') = '".$data[$keys[$i]]."' and article_tpl_type = 1":'';					    break;					default:							return $data;						break;				}		}		return $where;	}}